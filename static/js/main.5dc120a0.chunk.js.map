{"version":3,"sources":["resources/user.png","components/header/Header.js","components/time-label/TimeLabel.js","components/user-icon/UserIcon.js","components/card/Card.js","components/new-card/NewCard.js","components/list/List.js","components/input/input.js","components/new-list/NewList.js","components/card-info/CardInfo.js","containers/mainContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","TimeLabel","UserIcon","src","image","alt","Card","name","NewCard","addCard","useState","show","setShow","setName","onChange","e","target","value","onClick","List","title","cards","setCards","map","card","id","length","Input","actionText","onTextChange","OnActionButtonClick","NewList","setOnChange","text","setText","ac","CardInfo","MainContainer","lists","setLists","list","txt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5dc120a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.81dd75e1.png\";","import React from \"react\";\r\nimport \"./Header.scss\";\r\nimport { IoMdPersonAdd } from \"react-icons/io\";\r\nimport { FaHome,FaBell } from \"react-icons/fa\";\r\nimport { TiThLarge } from \"react-icons/ti\";\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header-wrapper\">\r\n      <div>\r\n        <TiThLarge />\r\n      </div>\r\n      <div>\r\n        <FaHome />\r\n      </div>\r\n      <div className=\"anim\">\r\n        <FaBell  />\r\n      </div>\r\n      <div>\r\n        <IoMdPersonAdd />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport './TimeLabel.scss'\r\nimport { MdTimer } from \"react-icons/md\";\r\nconst TimeLabel=()=>{\r\n    return(\r\n        <div className=\"time-label-wrapper\">\r\n            <MdTimer/> Jan 12 12:00 PM \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeLabel","import React from 'react'\r\nimport './UserIcon.scss'\r\nimport image from '../../resources/user.png'\r\n\r\nconst UserIcon = () =>{\r\n    return(\r\n        <div className=\"user-icon-wrapper\">\r\n            <img src={image} alt='user'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserIcon;","import React from 'react'\r\nimport './Card.scss'\r\nimport { FiEdit3 } from \"react-icons/fi\";\r\nimport TimeLabel from '../time-label/TimeLabel';\r\nimport UserIcon from '../user-icon/UserIcon';\r\nconst Card = ({name}) => {\r\n    return(\r\n        <div className='card-wrapper'>\r\n            <div className='action'><FiEdit3/></div>\r\n            <div className='title'>{name}</div>\r\n            <div className='time'><TimeLabel/></div>\r\n            <div className='members'>\r\n               <UserIcon/>\r\n               <UserIcon/>\r\n               <UserIcon/>\r\n               <UserIcon/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, { useState } from \"react\";\r\nimport \"./NewCard.scss\";\r\nimport { IoIosAddCircle } from \"react-icons/io\";\r\nimport { MdTimer } from \"react-icons/md\";\r\nimport Card from \"../card/Card\";\r\n\r\nconst NewCard = ({ addCard }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [name,setName] = useState('');\r\n\r\n  return (\r\n    <div>\r\n      {show ? (\r\n        <div className=\"new-card-wrapper-edit\">\r\n          <div className=\"add-new\">\r\n            <div className=\"title-input\">\r\n              <input onChange={e=>setName(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <button className=\"cancel\" onClick={() => setShow(false)}>\r\n                cancel\r\n              </button>\r\n              <button\r\n                className=\"add\"\r\n                onClick={() => {\r\n                  setShow(false);\r\n                  addCard(<Card name={name}/>)\r\n                }}\r\n              >\r\n                add card\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"new-card-wrapper\" onClick={() => setShow(true)}>\r\n          <IoIosAddCircle /> Add New Card\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCard;\r\n","import React, { useState } from \"react\";\r\nimport \"./List.scss\";\r\nimport NewCard from \"../new-card/NewCard\";\r\n\r\nconst List = ({ title }) => {\r\n  const [cards, setCards] = useState([]);\r\n\r\n  const addCard = card => {\r\n    setCards([\r\n      ...cards,\r\n      {\r\n        id: cards.length,\r\n        value: card\r\n      }\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-c-wrapper\">\r\n      <div className=\"list-wrapper\">\r\n        <div className=\"list-title\">{title}</div>\r\n        <div className=\"cards\">\r\n          {cards.map(card => (\r\n            <div>{card.value}</div>\r\n          ))}\r\n          {/* <Card /> */}\r\n          {/* <Card /> */}\r\n          <NewCard addCard={addCard} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from 'react'\r\nimport './input.scss'\r\n\r\nconst Input = ({actionText,onTextChange,OnActionButtonClick}) =>{\r\n\r\n\r\n  return(\r\n        <div className=\"input-wrapper-edit\">\r\n          <div className=\"add-new\">\r\n            <div className=\"title-input\">\r\n              <input onChange={e=>onTextChange(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n            </div>\r\n            <div className=\"buttons\">\r\n              <button className=\"cancel\" onClick={() => OnActionButtonClick(false)}>\r\n                cancel\r\n              </button>\r\n              <button\r\n                className=\"add\"\r\n                onClick={() => {\r\n                  OnActionButtonClick(true);\r\n                //   addCard(<Card name={name}/>)\r\n                }}\r\n              >\r\n                {actionText}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import React, { useState } from \"react\";\r\nimport \"./NewList.scss\";\r\nimport { IoIosAddCircle } from \"react-icons/io\";\r\nimport Input from \"../input/input\";\r\n\r\nconst NewList = ({setOnChange}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [text,setText] = useState(\"\");\r\n  const onAction = (ac) =>{\r\n    setShow(false);\r\n    if(ac){\r\n      setOnChange(text);\r\n    }\r\n  }\r\n\r\n  const onTextChange = (text) =>{\r\n      setText(text)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {show ? (\r\n        <div className=\"new-list-wrapper-edit\">\r\n          <Input actionText=\"Add List\" OnActionButtonClick={onAction} onTextChange={onTextChange}/>\r\n        </div>\r\n      ) : (\r\n        <div className=\"new-list-wrapper\" onClick={()=>setShow(true)}>\r\n          <IoIosAddCircle /> Add New List\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewList;\r\n","import React from \"react\";\r\nimport \"./CardInfo.scss\";\r\n\r\nconst CardInfo = ({ show }) => {\r\n  return (\r\n    <div className={\"card-info-wrapper \" + (show ? \"\" : \" hide\")}>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardInfo;\r\n","import React, { useState } from \"react\";\r\nimport \"./mainContainer.scss\";\r\nimport Header from \"../components/header/Header\";\r\nimport List from \"../components/list/List\";\r\nimport NewList from \"../components/new-list/NewList\";\r\nimport CardInfo from \"../components/card-info/CardInfo\";\r\n\r\nconst MainContainer = () => {\r\n  const [lists, setLists] = useState([]);\r\n  const addList = (list) => {\r\n    setLists([...lists,{\r\n      id:lists.length,\r\n      value:list\r\n    }]);\r\n  };\r\n\r\n  const onChange = (txt) =>{\r\n    addList(<List title={txt}/>)\r\n  }\r\n return(\r\n\r\n   <div className=\"main-container-wrapper\">\r\n     <Header/>\r\n     <div className=\"list-container\">\r\n          {\r\n            lists.map(list=>(\r\n              <div>{list.value}</div>\r\n            ))\r\n          }\r\n        <NewList setOnChange={onChange}/>\r\n     </div>\r\n     <CardInfo show={false}/>\r\n   </div>\r\n )\r\n}\r\n\r\nexport default MainContainer;\r\n","import React from 'react';\nimport './App.scss';\nimport MainContainer from './containers/mainContainer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainContainer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}